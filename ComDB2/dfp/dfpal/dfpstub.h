/* ------------------------------------------------------------------ */
/* Decimal Floating Point Abstraction Layer (DFPAL)                   */
/* dfpstub.h                                                          */
/* ------------------------------------------------------------------ */
/* (c) Copyright IBM Corporation, 2007.  All rights reserved.         */
/*                                                                    */
/* This software is made available under the terms of the             */
/* ICU License -- ICU 1.8.1 and later.                                */
/*                                                                    */
/* The description and User's Guide ("The DFPAL C Library") for       */
/* this software is called dfpalugaio.html.  This document is         */
/* included in this package and also available at:                    */
/* http://www2.hursley.ibm.com/decimal                                */
/*                                                                    */
/* Author:                                                            */
/*   Punit Shah (punit@us.ibm.com)                                    */
/*                                                                    */
/* Please send comments, suggestions, and corrections to the          */
/* the following email address:                                       */
/*   dfpal-l@austin.ibm.com                                           */
/*                                                                    */
/* Major contribution:                                                */
/*   Ian McIntosh (ianm@ca.ibm.com)                                   */
/*   Calvin Sze (calvins@us.ibm.com)                                  */
/* ------------------------------------------------------------------ */
#if !defined(__DFPSTUB_H__)
  #define __DFPSTUB_H__
  #define ppc_mffs() ((dfp_integer_in_double)0)
  #define ppc_mtfs(a) ((void)0)
  #define ppc_mtfsf_drm(a) ((void)0)
  #define ppc_dadd(a,b) ((dfp_double)0)
  #define ppc_daddq(a,b,c) ((dfp_quad)0)
  #define ppc_dsub(a,b) ((dfp_double)0)
  #define ppc_dsubq(a,b,c) ((dfp_quad)0)
  #define ppc_dmul(a,b) ((dfp_double)0)
  #define ppc_dmulq(a,b,c) ((dfp_quad)0)
  #define ppc_ddiv(a,b) ((dfp_double)0)
  #define ppc_ddivq(a,b,c) ((dfp_quad)0)
  #define ppc_fneg(a) ((dfp_double)0)
  #define ppc_fnegq(a,b) ((dfp_quad)0)
  #define ppc_fabs(a) ((dfp_double)0)
  #define ppc_fabsq(a) ((dfp_quad)0)
  #define ppc_dqua_rne(a,b) ((dfp_double)0)
  #define ppc_dqua_rtz(a,b) ((dfp_double)0)
  #define ppc_dqua_rnaz(a,b) ((dfp_double)0)
  #define ppc_dqua_rfpscr(a,b) ((dfp_double)0)
  #define ppc_dquaq_rne(a,b,c) ((dfp_quad)0)
  #define ppc_dquaq_rtz(a,b,c) ((dfp_quad)0)
  #define ppc_dquaq_rnaz(a,b,c) ((dfp_quad)0)
  #define ppc_dquaq_rfpscr(a,b,c) ((dfp_quad)0)
  #define ppc_dquai_rne_0(a) ((dfp_double)0)
  #define ppc_dquai_rtz_0(a) ((dfp_double)0)
  #define ppc_dquai_rnaz_0(a) ((dfp_double)0)
  #define ppc_dquai_rfpscr_0(a) ((dfp_double)0)
  #define ppc_dquaiq_rne_0(a,b) ((dfp_quad)0)
  #define ppc_dquaiq_rtz_0(a,b) ((dfp_quad)0)
  #define ppc_dquaiq_rnaz_0(a,b) ((dfp_quad)0)
  #define ppc_dquaiq_rfpscr_0(a,b) ((dfp_quad)0)
  #define ppc_drrnd_rne_7(a) ((dfp_double)0)
  #define ppc_drrnd_rtz_7(a) ((dfp_double)0)
  #define ppc_drrnd_rnaz_7(a) ((dfp_double)0)
  #define ppc_drrnd_rfpscr_7(a) ((dfp_double)0)
  #define ppc_drrndq_rne_7(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rtz_7(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rnaz_7(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rfpscr_7(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rne_16(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rtz_16(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rnaz_16(a,b) ((dfp_quad)0)
  #define ppc_drrndq_rfpscr_16(a,b) ((dfp_quad)0)
  #define ppc_dcmpo(a,b) ((compare_result)0)
  #define ppc_dcmpoq(a,b,c) ((compare_result)0)
  #define ppc_dcmpu(a,b) ((compare_result)0)
  #define ppc_dcmpuq(a,b,c) ((compare_result)0)
  #define ppc_dtstex(a,b) ((compare_result)0)
  #define ppc_dtstexq(a,b,c) ((compare_result)0)
  #define ppc_dtstsf(a,b) ((compare_result)0)
  #define ppc_dtstsfq(a,b) ((compare_result)0)
  #define ppc_dtstdc(a) ((test_data_result)0)
  #define ppc_dtstdcq(a,b) ((test_data_result)0)
  #define ppc_dtstdg(a) ((test_data_result)0)
  #define ppc_dtstdcq(a,b) ((test_data_result)0)
  #define ppc_drintx_rne(a) ((dfp_double)0)
  #define ppc_drintx_rtz(a) ((dfp_double)0)
  #define ppc_drintx_rnaz(a) ((dfp_double)0)
  #define ppc_drintx_rfpscr(a) ((dfp_double)0)
  #define ppc_drintx_rtpi(a) ((dfp_double)0)
  #define ppc_drintx_rtmi(a) ((dfp_double)0)
  #define ppc_drintx_rafz(a) ((dfp_double)0)
  #define ppc_drintx_rntz(a) ((dfp_double)0)
  #define ppc_drintxq_rne(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rtz(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rnaz(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rfpscr(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rtpi(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rtmi(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rafz(a,b) ((dfp_quad)0)
  #define ppc_drintxq_rntz(a,b) ((dfp_quad)0)
  #define ppc_drintn_rne(a) ((dfp_double)0)
  #define ppc_drintn_rtz(a) ((dfp_double)0)
  #define ppc_drintn_rnaz(a) ((dfp_double)0)
  #define ppc_drintn_rfpscr(a) ((dfp_double)0)
  #define ppc_drintn_rtpi(a) ((dfp_double)0)
  #define ppc_drintn_rtmi(a) ((dfp_double)0)
  #define ppc_drintn_rafz(a) ((dfp_double)0)
  #define ppc_drintn_rntz(a) ((dfp_double)0)
  #define ppc_drintnq_rne(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rtz(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rnaz(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rfpscr(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rtpi(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rtmi(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rafz(a,b) ((dfp_quad)0)
  #define ppc_drintnq_rntz(a,b) ((dfp_quad)0)
  #define ppc_dctdp(a) ((dfp_double)0)
  #define ppc_dctqpq(a) ((dfp_quad)0)
  #define ppc_drsp(a) ((dfp_double)0)
  #define ppc_drdpq(a,b) ((dfp_double)0)
  #define ppc_dcffix(a) ((dfp_double)0)
  #define ppc_dcffix_via_dcffixq(a) ((dfp_double)0)
  #define ppc_dcffixq(a) ((dfp_quad)0)
  #define ppc_dctfix(a) ((dfp_integer_in_double)0)
  #define ppc_dctfixq(a,b) ((dfp_integer_in_double)0)
  #define ppc_ddedpd_u(a) ((dfp_integer_in_double)0)
  #define ppc_ddedpd_c(a) ((dfp_integer_in_double)0)
  #define ppc_ddedpd_f(a) ((dfp_integer_in_double)0)
  #define ppc_ddedpdq_u(a,b) ((dfp_integer_pair_in_quad)0)
  #define ppc_ddedpdq_c(a,b) ((dfp_integer_pair_in_quad)0)
  #define ppc_ddedpdq_f(a,b) ((dfp_integer_pair_in_quad)0)
  #define ppc_dendpd_u(a) ((dfp_double)0)
  #define ppc_dendpd_s(a) ((dfp_double)0)
  #define ppc_dendpdq_u(a,b) ((dfp_quad)0)
  #define ppc_dendpdq_s(a,b) ((dfp_quad)0)
  #define ppc_diex(a,b) ((dfp_double)0)
  #define ppc_diexq(a,b) ((dfp_quad)0)
  #define ppc_dxex(a) ((dfp_integer_in_double)0)
  #define ppc_dxexq(a,b) ((dfp_integer_in_double)0)
  #define ppc_dscli_1(a) ((dfp_double)0)
  #define ppc_dscli_15(a) ((dfp_double)0)
  #define ppc_dscliq_1(a,b) ((dfp_quad)0)
  #define ppc_dscliq_31(a,b) ((dfp_quad)0)
  #define ppc_dscri_1(a) ((dfp_double)0)
  #define ppc_dscri_15(a) ((dfp_double)0)
  #define ppc_dscriq_1(a,b) ((dfp_quad)0)
  #define ppc_dscriq_31(a,b) ((dfp_quad)0)
  #define ppc_dscriq_33(a,b) ((dfp_quad)0)
#endif /* #if !defined(__DFPSTUB_H__) */
